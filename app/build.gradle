import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "nl.eduvpn.app"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 19
        versionName "2.99.0"
        ndkVersion "21.0.6113669"

        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "ORGANIZATION_LIST_BASE_URL", "\"https://disco.eduvpn.org/v2/\""
        buildConfigField "String", "SIGNATURE_URL_POSTFIX", "\".minisig\""
        buildConfigField "String[]", "MINISIGN_SIGNATURE_VALIDATION_PUBLIC_KEY", // If you want to add more, follow this guide (list version): https://stackoverflow.com/a/42130853/1395437
                "{" +
                        "\"RWRtBSX1alxyGX+Xn3LuZnWUT0w//B6EmTJvgaAxBMYzlQeI+jdrO6KF\"," + // fkooman@deic.dk, kolla@uninett.no
                        "\"RWQKqtqvd0R7rUDp0rWzbtYPA3towPWcLDCl7eY9pBMMI/ohCmrS0WiM\"" + // RoSp
                        "}"
        buildConfigField "boolean", "API_DISCOVERY_ENABLED", "true" // If false, you can only enter server URLs manually.

        // API
        buildConfigField "String", "OAUTH_CLIENT_ID", "\"org.eduvpn.app.android\""
        buildConfigField "String", "OAUTH_REDIRECT_URI", "\"org.eduvpn.app:/api/callback\""
        buildConfigField "String", "OAUTH_SCOPE", "\"config\""
        buildConfigField "String", "CERTIFICATE_DISPLAY_NAME", "\"eduVPN for Android\""

        manifestPlaceholders = [
                'appAuthRedirectScheme': 'org.eduvpn.app'
        ]
        missingDimensionStrategy 'implementation', 'ui' // Skeleton is no option for us because we need the log activity

        // This excludes some pretty old ABIs such armeabi or mips. LibSodium-JNI still includes binaries for these, which
        // leads to some devices selecting these as the app ABI, but the OpenVPN library did not include a binary for these,
        // thus resulting in a crash.
        ndk {
            abiFilters 'arm64-v8a', 'x86', 'x86_64', 'armeabi-v7a'
        }
        buildFeatures {
            dataBinding = true
        }


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        testOptions {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }

    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "product"

    productFlavors {
        basic {
            dimension "product"
            isDefault = true
        }
        dev {
            dimension "product"
            applicationId "nl.eduvpn.app.dev"
        }
        home {
            dimension "product"
            applicationId "org.letsconnect_vpn.app"
            // API discovery is disabled, and only custom URLs can be entered.
            buildConfigField "boolean", "API_DISCOVERY_ENABLED", "false"
            buildConfigField "String", "OAUTH_CLIENT_ID", "\"org.letsconnect-vpn.app.android\""
            buildConfigField "String", "OAUTH_REDIRECT_URI", "\"org.letsconnect-vpn.app:/api/callback\""
            buildConfigField "String", "CERTIFICATE_DISPLAY_NAME", "\"Let's Connect! for Android\""

            manifestPlaceholders = [
                    'appAuthRedirectScheme': 'org.letsconnect-vpn.app'
            ]
        }
    }

    lintOptions {
        disable 'GradleDependency', // Gradle dependencies can be a bit outdated, since we prefer to use the same versions as in the VPN library
                'UnsafeNativeCodeLocation', // The OpenVPN .so files are put to a different place, as per the documentation
                'RtlSymmetry', 'RtlHardcoded', // No support for RTL as of now
                'MissingTranslation' // The OpenVPN library contains translations for a lot off languages. This app only has english, so it complains that we are missing translations for the other languages
    }

    compileOptions {
        // Support Java 8+ on sdk < 24, also necessary for WireGuard
        coreLibraryDesugaringEnabled true

        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    kapt {
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            // See: https://github.com/google/dagger/issues/306#issuecomment-405525757
            option("-Xmaxerrs", 2000)
            // This will fail the build on warnings which are run in a build phase executed by kapt.
            option("-Werror")
        }
    }

    packagingOptions {
        // Created by kotlinx-coroutines-core for debugging
        exclude "DebugProbesKt.bin"
    }
}

def daggerVersion = "2.39.1"
def okHttpVersion = "4.8.1"
def lifecycleVersion = "2.2.0"

dependencies {
    // The VPN library
    implementation project(path: ':ics-openvpn-main')
    // WireGuard VPN library
    implementation 'com.wireguard.android:tunnel:1.0.20211029'
    // OAuth2 client
    implementation project(path: ':appauth')
    // Please try to stay in sync with the versions used in the ics-openvpn module
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.3"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation 'com.google.android.material:material:1.0.0'
    implementation "androidx.browser:browser:1.0.0" // Custom tabs
    implementation "com.android.support.constraint:constraint-layout:1.0.2"


    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Secure preferences (deprecated, only kept for backwards compatibility)
    implementation 'com.scottyab:secure-preferences-lib:0.1.4'
    // HTTP client
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    // Dependency injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    // Image loader
    implementation 'com.squareup.picasso:picasso:2.71828'
    // Public key verification
    implementation "com.github.joshjdevl.libsodiumjni:libsodium-jni-aar:2.0.2@aar"

    // Kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"

    // All testing related libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'

    // Support Java 8+ on sdk < 24, also necessary for WireGuard
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

// This will fail the build if there is a Kotlin compiler warning.
tasks.withType(KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Werror", "-opt-in=kotlin.RequiresOptIn"]
    }
}
